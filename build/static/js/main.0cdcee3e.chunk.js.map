{"version":3,"sources":["fakeApi/PostMethod.jsx","fakeApi/GetMethod.jsx","Whether.jsx","App.js","Mounting/Student.jsx","Mounting/Constructor.jsx","index.js"],"names":["Component","Whether","useState","data","setData","city","setCity","city2","setCity2","weather","setWeather","setTask","useEffect","axios","get","then","res","console","log","main","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","temp","temp_min","temp_max","App","Student","props","this","Name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGwCA,YCADA,Y,uCCMxB,SAASC,IAEpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,QAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwBR,mBAAS,IAAjC,mBAAaS,GAAb,WAEAC,qBAAU,WACNC,IAAMC,IAAN,4DAA+DT,EAA/D,yDAA2HU,MAAK,SAACC,GAC7HC,QAAQC,IAAIF,EAAIb,MAChBC,EAAQY,EAAIb,KAAKgB,MAEjBT,EAAWM,EAAIb,KAAKM,QAAQ,GAAGU,MAC/BF,QAAQC,IAAIT,GAEZE,EAAQ,CAACF,SAEd,CAACJ,IAUJ,OAEI,mCAeI,qBAAKe,UAAU,OAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,sBAAMC,SA1BE,SAACC,GACrBhB,EAAQC,GAGRe,EAAEC,kBAsBU,SACI,sBAAKH,UAAU,aAAf,UACI,uBAAOI,KAAK,OAAOC,MAAOlB,EAAOmB,SAAU,SAACJ,GAAQd,EAASc,EAAEK,OAAOF,QAAUG,YAAY,oBAC5F,iCAAQ,cAAC,IAAD,CAAUR,UAAU,uBAGpC,sBAAKA,UAAU,gBAAf,UACI,kDAIA,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uCACA,yCAEJ,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,iBAAf,UACKjB,EAAK0B,KAAK,cAAC,IAAD,CAAWT,UAAU,mBAEpC,sBAAKA,UAAU,YAAf,UAGI,cAAC,IAAD,CAAUA,UAAU,gBAAgB,kCAAKX,WAKjD,sBAAKW,UAAU,cAAf,UACI,sBAAKA,UAAU,WAAf,UACI,cAAC,IAAD,CAAkBA,UAAU,iBADhC,IACkD,8BAAIjB,EAAK2B,SAAT,kBAGlD,sBAAKV,UAAU,WAAf,UACI,cAAC,IAAD,CAAmBA,UAAU,iBADjC,IACmD,8BAAIjB,EAAK4B,SAAT,qBAGvD,qBAAKX,UAAU,WAAf,SACI,+BAAI,cAAC,IAAD,IAAJ,IAAoBf,oBClCrC2B,MA1Cf,WACE,OACE,mCAkCE,cAAC/B,EAAD,OCrDegC,E,4JACjB,SAAOC,GACH,OACI,8BACI,wCAAWC,KAAKD,MAAME,c,GAJDpC,aCCIA,YCKzCqC,IAASC,OAGP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.0cdcee3e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class PostMethod extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            userid: '',\r\n            title: '',\r\n            body: ''\r\n        }\r\n    }\r\n\r\n    changHandler = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handlesubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state);\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\", this.state)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { userid, title, body } = this.state\r\n        return (\r\n\r\n            <form onSubmit={this.handlesubmit}>\r\n                <div>\r\n                    <label > userid</label>\r\n                    <input type=\"text\" value={userid} name=\"userid\" onChange={this.changHandler} />\r\n                </div>\r\n                <div>\r\n                    <label > title</label>\r\n                    <input type=\"text\" value={title} name=\"title\" onChange={this.changHandler} />\r\n                </div>\r\n                <div>\r\n                    <label > body</label>\r\n                    <input type=\"text\" value={body} name=\"body\" onChange={this.changHandler} />\r\n                </div>\r\n                <button>Submit</button>\r\n            </form>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class GetMethod extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { WiCelsius, WiCloudy } from 'react-icons/wi';\r\nimport { GoSearch, GoLocation } from 'react-icons/go';\r\nimport { FaTemperatureHigh, FaTemperatureLow } from 'react-icons/fa';\r\nimport { TiWeatherPartlySunny } from 'react-icons/ti';\r\nimport { RiHazeFill } from 'react-icons/ri';\r\nimport axios from 'axios'\r\nimport './Wether.css'\r\n\r\nexport default function Whether() {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [city, setCity] = useState(\"pune\");\r\n    const [city2, setCity2] = useState(\"\");\r\n    const [weather, setWeather] = useState(\"\");\r\n    const [task, setTask] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fa94869a3d6ab4315ca915c1538c485c&units=metric`).then((res) => {\r\n            console.log(res.data);\r\n            setData(res.data.main);\r\n            // setWeather(res.data.weather);\r\n            setWeather(res.data.weather[0].main);\r\n            console.log(weather);\r\n            // console.log(data);\r\n            setTask([weather]);\r\n        })\r\n    }, [city])\r\n\r\n\r\n\r\n    const onSUbmitHandler = (e) => {\r\n        setCity(city2)\r\n\r\n\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n            {/* {\r\n                data.map((dd, i) => {\r\n                    return <h1>{dd}</h1>\r\n                })\r\n         } */}\r\n\r\n\r\n\r\n\r\n            {/* <h1>{city}</h1> */}\r\n            {/* <h1>{city2}</h1> */}\r\n            {/* <h1> </h1> */}\r\n            {/* <div className=\"body\" style={{ backgroundImage: task[0] == 'Clouds' ? `url('https://images.pexels.com/photos/2097628/pexels-photo-2097628.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')` : task[0] == 'Haze'?  `url(\"https://images.pexels.com/photos/2310712/pexels-photo-2310712.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\")` :`url(\"https://images.pexels.com/photos/209831/pexels-photo-209831.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\")`, backgroundSize: \"cover\" }}> */}\r\n            <div className=\"body\">\r\n\r\n                <div className=\"container\">\r\n                    <form onSubmit={onSUbmitHandler}>\r\n                        <div className=\"search-bar\">\r\n                            <input type=\"text\" value={city2} onChange={(e) => { setCity2(e.target.value) }} placeholder='Enter City Name' />\r\n                            <button><GoSearch className='search-icon' /></button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"wether-format\">\r\n                        <h1>Weather Forecast</h1>\r\n                        {/* <div className=\"city-name\">\r\n                        <h4>Pune</h4> \r\n                    </div> */}\r\n                        <div className=\"weather-template\">\r\n                            <div className=\"wether-date\">\r\n                                <h3>Today</h3>\r\n                                <h3>Date</h3>\r\n                            </div>\r\n                            <div className=\"temp\">\r\n                                <div className=\"temp-with-icon\">\r\n                                    {data.temp}<WiCelsius className='wether-icon' />\r\n                                </div>\r\n                                <div className=\"temp-logo\">\r\n\r\n                                    {/* <TiWeatherPartlySunny className='wether-icon' style={{ display: task[0] == \"Mist\" ? `none` : `block` }} /> */}\r\n                                    <WiCloudy className='wether-icon' /><p> {weather}</p>\r\n                                    {/* <RiHazeFill className='wether-icon' style={{ display: task[0] == \"Haze\" ? `block` : `none` }} /> */}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"temp-minMax\">\r\n                                <div className=\"temp-min\">\r\n                                    <FaTemperatureLow className='wether-icons' /> <p>{data.temp_min} min temp</p>\r\n\r\n                                </div>\r\n                                <div className=\"temp-max\">\r\n                                    <FaTemperatureHigh className='wether-icons' /> <p>{data.temp_max} max temp</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"location\">\r\n                                <h3><GoLocation /> {city}</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\n// import './App.css';\nimport NewForm from \"./Todo/NewForm\";\nimport Shedul from \"./shedules/Shedul\";\nimport UseCustomCount from \"./CustomHook/Custom\";\nimport PostMethod from \"./fakeApi/PostMethod\";\nimport GetMethod from \"./fakeApi/GetMethod\";\nimport FormR from \"./TodoForm/FormR\";\nimport FetchData from \"./TodoForm/FetchData\";\n// import { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { Routes } from \"react-router-dom\";\nimport Home from \"./Routing/Home\";\nimport About from \"./Routing/About\";\nimport Contact from \"./Routing/Contact\";\nimport Navbar from \"./Navbar\";\nimport Newforpra from \"./Newforpra\";\nimport Navitem from \"./Navitem\";\nimport Whether from \"./Whether\";\n\nfunction App() {\n  return (\n    <>\n      {/* <PostMethod /> */}\n      {/* <UseCustomCount /> */}\n      {/* <NewForm /> */}\n      {/* <Shedul /> */}\n      {/* <GetMethod /> */}\n      {/* <FormR /> */}\n      {/* <FetchData /> */}\n      {/* <Router>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/About\">About</Link>\n        <Link to=\"/Contact\">Contact</Link>\n\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/About\" element={<About />} />\n          <Route path=\"/Contact\" element={<Contact />} />\n        </Routes>\n\n\n      </Router> */}\n      {/* <Router> */}\n\n\n        {/* <Routes>\n          <Route path=\"/\" element={<Navitem />} />\n          <Route path=\"/FormR\" element={<FormR />} />\n          <Route path=\"/FetchData\" element={<FetchData />} />\n        </Routes> */}\n\n\n\n      {/* </Router> */}\n      {/* <Newforpra /> */}\n      <Whether/>\n\n    </>\n  );\n}\n\nexport default App;\n\n\n{/* <TheamContaxt.provider></TheamContaxt.provider> */ }","import React, { Component } from 'react'\r\n\r\nexport default class Student extends Component {\r\n    render(props) {\r\n        return (\r\n            <div>\r\n                <h1>hello {this.props.Name}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Student from './Student';\r\n\r\nexport default class Constructor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"APP - Constructor called\");\r\n        console.log(props);\r\n        this.state = {\r\n            roll: \"101\"\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        console.log(\"App - Get Derived State From Props\");\r\n        console.log(props, state);\r\n        return null;\r\n    }\r\n    componentDidMount() {\r\n        //get data from server and set the data to state\r\n        console.log(\"App - componentDidMount - mounted\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <h1>ajay kharat</h1> */}\r\n                <Student Name=\"ajay kharat\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Constructor from './Mounting/Constructor';\nimport AppUseEfect from './useEffect/AppUseEfect';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n\n  <React.StrictMode>\n    <App />\n    {/* <Newforpra/> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n\n\n\n\n\n\n\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}